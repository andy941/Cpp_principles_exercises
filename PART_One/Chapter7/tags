!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/a3c87ab5/
Token	calculator08buggy.cpp	/^	Token(char ch) :kind(ch), value(0) { }$/;"	f	struct:Token	file:
Token	calculator08buggy.cpp	/^	Token(char ch, double val) :kind(ch), value(val) { }$/;"	f	struct:Token	file:
Token	calculator08buggy.cpp	/^struct Token {$/;"	s	file:
Token_stream	calculator08buggy.cpp	/^	Token_stream() :full(0), buffer(0) { }$/;"	f	class:Token_stream	file:
Token_stream	calculator08buggy.cpp	/^class Token_stream {$/;"	c	file:
Variable	calculator08buggy.cpp	/^	Variable(string n, double v) :name(n), value(v) { }$/;"	f	struct:Variable	file:
Variable	calculator08buggy.cpp	/^struct Variable {$/;"	s	file:
buffer	calculator08buggy.cpp	/^	Token buffer;$/;"	m	class:Token_stream	typeref:typename:Token	file:
calculate	calculator08buggy.cpp	/^void calculate()$/;"	f	typeref:typename:void
clean_up_mess	calculator08buggy.cpp	/^void clean_up_mess()$/;"	f	typeref:typename:void
declaration	calculator08buggy.cpp	/^double declaration()$/;"	f	typeref:typename:double
expression	calculator08buggy.cpp	/^double expression()$/;"	f	typeref:typename:double
full	calculator08buggy.cpp	/^	bool full;$/;"	m	class:Token_stream	typeref:typename:bool	file:
get	calculator08buggy.cpp	/^Token Token_stream::get()$/;"	f	class:Token_stream	typeref:typename:Token
get_value	calculator08buggy.cpp	/^double get_value(string s)$/;"	f	typeref:typename:double
ignore	calculator08buggy.cpp	/^void Token_stream::ignore(char c)$/;"	f	class:Token_stream	typeref:typename:void
is_declared	calculator08buggy.cpp	/^bool is_declared(string s)$/;"	f	typeref:typename:bool
kind	calculator08buggy.cpp	/^	char kind;$/;"	m	struct:Token	typeref:typename:char	file:
let	calculator08buggy.cpp	/^const char let = 'L';$/;"	v	typeref:typename:const char
main	calculator08buggy.cpp	/^int main()$/;"	f	typeref:typename:int
name	calculator08buggy.cpp	/^	string name;$/;"	m	struct:Token	typeref:typename:string	file:
name	calculator08buggy.cpp	/^	string name;$/;"	m	struct:Variable	typeref:typename:string	file:
name	calculator08buggy.cpp	/^const char name = 'a';$/;"	v	typeref:typename:const char
names	calculator08buggy.cpp	/^vector<Variable> names;$/;"	v	typeref:typename:vector<Variable>
number	calculator08buggy.cpp	/^const char number = '8';$/;"	v	typeref:typename:const char
primary	calculator08buggy.cpp	/^double primary()$/;"	f	typeref:typename:double
print	calculator08buggy.cpp	/^const char print = ';';$/;"	v	typeref:typename:const char
prompt	calculator08buggy.cpp	/^const string prompt = "> ";$/;"	v	typeref:typename:const string
quit	calculator08buggy.cpp	/^const char quit = 'Q';$/;"	v	typeref:typename:const char
result	calculator08buggy.cpp	/^const string result = "= ";$/;"	v	typeref:typename:const string
set_value	calculator08buggy.cpp	/^void set_value(string s, double d)$/;"	f	typeref:typename:void
statement	calculator08buggy.cpp	/^double statement()$/;"	f	typeref:typename:double
term	calculator08buggy.cpp	/^double term()$/;"	f	typeref:typename:double
ts	calculator08buggy.cpp	/^Token_stream ts;$/;"	v	typeref:typename:Token_stream
unget	calculator08buggy.cpp	/^	void unget(Token t) { buffer = t; full = true; }$/;"	f	class:Token_stream	typeref:typename:void	file:
value	calculator08buggy.cpp	/^	double value;$/;"	m	struct:Token	typeref:typename:double	file:
value	calculator08buggy.cpp	/^	double value;$/;"	m	struct:Variable	typeref:typename:double	file:
